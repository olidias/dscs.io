---
import { Icon } from 'astro-icon';
import { Picture } from '@astrojs/image/components';

interface Item {
  title: string;
  description?: string;
  icon?: string;
}

export interface Props {
  title?: string;
  highlight?: string;
  items: Array<Item>;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  highlight = await Astro.slots.render('highlight'),
  items = [],
  image = await Astro.slots.render('image'),
} = Astro.props;
---

<section class="px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-6xl" id="procedure">
  <div class="flex justify-evenly">
    <div class="md:py-4 md:pr-16 mb-4 md:mb-0">
      {highlight && (
        <div class="flex justify-center items-center mb-2">
        <p
          class="text-base text-primary dark:text-blue-200 font-semibold tracking-wide uppercase flex justify-self-center"
          set:html={highlight}
        />
        </div>
      )}
      {title && 
      <div class="flex justify-center items-center">
        <h2 class="mb-8 text-4xl md:text-5xl font-bold font-heading " set:html={title} />
      </div>}
      <div class="mt-5 pt-5">
      {
        items &&
          items.length &&
          items.map(({ title, description, icon }, index) => (
            <div class="flex">
              <div class="flex flex-col items-center mr-4">
                <div>
                  {index !== items.length - 1 ? (
                    <div class="flex items-center ml-4 justify-center after:w-10 after:h-10 after:border-primary after:dark:border-blue-700 after:border-2 after:absolute after:rotate-45 after:scale-90">
                      {icon && <Icon name={icon} class="w-6 h-6 text-primary dark:text-slate-200" />}
                    </div>
                  ) : (
                    <div class="flex items-center justify-center w-10 h-10 rounded-full border-primary border-2 bg-primary dark:bg-blue-700 dark:border-blue-700 ml-2 -mt-3">
                      <Icon name={icon} class="w-6 h-6 text-white dark:text-slate-200" />
                    </div>
                  )}
                </div>
                {index !== items.length -1 ? (
                  <div class="w-[2px] h-full bg-gray-300 dark:bg-slate-500 my-3 pb-20 ml-4" />
                ) : (<span />)}
              </div>
              <div class={`pt-1 ${index !== items.length - 1 ? 'pb-8 ml-3' : '-mt-4'}  -mt-[6px]`}>
                {title && <p class="mb-2 text-xl font-bold dark:text-slate-300" set:html={title} />}
                {description && <p class="text-muted dark:text-slate-400" set:html={description} />}
              </div>
            </div>
          ))
      }
      </div>
    </div>
  </div>
</section>
